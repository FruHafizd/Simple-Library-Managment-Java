/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibraryManagment.Borrowers;

import LibraryManagment.home.HomeView;
import LibraryManagment.utilities.ConnectionMysql;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class BorrowersView extends javax.swing.JInternalFrame {
    private Component sv;
    DefaultTableModel tabmode;
    /**
     * Creates new form BorrowersView
     */
    public BorrowersView() {
        initComponents();
        displayData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane3 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        textBorrowerId = new javax.swing.JTextField();
        textName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        buttonSimpan = new javax.swing.JButton();
        buttonBatal = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        textSearch = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableBorrowers = new javax.swing.JTable();
        buttonUbah = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();
        buttonSegarkan = new javax.swing.JButton();
        buttonTutup = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        textAddress = new javax.swing.JTextField();
        textContact = new javax.swing.JTextField();

        jLabel2.setText("Borrower Id :");

        jLabel3.setText("Name : ");

        textBorrowerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textBorrowerIdActionPerformed(evt);
            }
        });

        textName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameActionPerformed(evt);
            }
        });

        jLabel5.setText("Contact : ");

        jLabel7.setText("Address : ");

        buttonSimpan.setText("Save");
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonBatal.setText("Cancel");
        buttonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBatalActionPerformed(evt);
            }
        });

        jLabel8.setText("Searchi Data : ");

        textSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textSearchActionPerformed(evt);
            }
        });

        tableBorrowers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableBorrowers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableBorrowersMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tableBorrowers);

        buttonUbah.setText("Change");
        buttonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUbahActionPerformed(evt);
            }
        });

        buttonHapus.setText("Delete");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        buttonSegarkan.setText("Refersh");
        buttonSegarkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSegarkanActionPerformed(evt);
            }
        });

        buttonTutup.setText("Close");
        buttonTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTutupActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        jLabel1.setText("Borrowers");

        textAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textAddressActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING))
                                        .addGap(1, 1, 1))
                                    .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(25, 25, 25)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(textContact, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 506, Short.MAX_VALUE)
                                    .addComponent(textName, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(textAddress)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(textBorrowerId))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(buttonSimpan)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addComponent(buttonUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonSegarkan, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonTutup, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 238, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel1)))
                .addContainerGap(532, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(39, 39, 39)
                .addComponent(jLabel1)
                .addGap(43, 43, 43)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textBorrowerId, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(textName, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(textContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonBatal)
                    .addComponent(buttonSimpan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUbah)
                    .addComponent(buttonHapus)
                    .addComponent(buttonSegarkan)
                    .addComponent(buttonTutup))
                .addContainerGap(324, Short.MAX_VALUE))
        );

        jScrollPane3.setViewportView(jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 687, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 580, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void textBorrowerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textBorrowerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textBorrowerIdActionPerformed

    private void textNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNameActionPerformed

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
       try {
            boolean isValid = validateData();
            if (!isValid) {
                Connection connection = ConnectionMysql.getConnection();
                String sql = "INSERT INTO borrowers (id_borrower, name, contact, address) VALUES (?, ?, ?, ?)";
                PreparedStatement preparedStatement = connection.prepareStatement(sql);

                // Set parameter values
                preparedStatement.setString(1, textBorrowerId.getText().trim());
                preparedStatement.setString(2, textName.getText().trim());
                preparedStatement.setString(3, textContact.getText().trim());
                preparedStatement.setString(4, textAddress.getText().trim());

                // Execute the SQL statement to save data
                int isSuccess = preparedStatement.executeUpdate();

                if (isSuccess == 1) {
                    // Display data and reset fields if successful
                    displayData();
                    reset();
                    JOptionPane.showMessageDialog(null, "Data Successfully Saved", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Save Data", "Message", JOptionPane.ERROR_MESSAGE);
                }
            }
        } catch (SQLException | HeadlessException error) {
            System.out.println("Error in BorrowerController-buttonSaveAction, details: " + error.toString());
            JOptionPane.showMessageDialog(null, "Something went wrong: " + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void buttonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBatalActionPerformed
        try {
            reset();
        } catch (Exception error) {
            System.out.println("Error at SiswaController-buttonBatalAction, details : " + error.toString());

        }
    }//GEN-LAST:event_buttonBatalActionPerformed

    private void textSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textSearchActionPerformed
        searchData();
        // TODO add your handling code here:
    }//GEN-LAST:event_textSearchActionPerformed

    private void tableBorrowersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableBorrowersMouseClicked
        // TODO add your handling code here:
        int books = tableBorrowers.getSelectedRow();
        textBorrowerId.setText(tableBorrowers.getValueAt(books,0).toString());
        textName.setText(tableBorrowers.getValueAt(books,1).toString());
        textContact.setText(tableBorrowers.getValueAt(books,2).toString());
        textAddress.setText(tableBorrowers.getValueAt(books,3).toString());
    }//GEN-LAST:event_tableBorrowersMouseClicked

    private void buttonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUbahActionPerformed
        int row = tableBorrowers.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Silahkan klik data yang ingin diubah");
        } else {
            try (Connection konek = ConnectionMysql.getConnection()) {
               String sql = "UPDATE borrowers SET name = ?, contact = ?, address = ? WHERE id_borrower = ?";

                try (PreparedStatement pst = konek.prepareStatement(sql)) {
                    // Set the parameter values
                    pst.setString(1, textName.getText());
                    pst.setString(2, textContact.getText());
                    pst.setString(3, textAddress.getText());
                    pst.setString(4, tableBorrowers.getValueAt(row, 0).toString()); // WHERE kd_jurusan = ?

                    // Execute the SQL statement to update the data
                    int isSuccess = pst.executeUpdate();

                    if (isSuccess == 1) {
                        // Display data and reset if successful
                        displayData();
                        reset();
                        JOptionPane.showMessageDialog(null, "Data Successfully Saved", "Message", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to Save Data", "Message", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException | HeadlessException error) {
                System.out.println("Error at SiswaController-buttonSimpanAction, details: " + error.toString());
                JOptionPane.showMessageDialog(null, "Something Wrong: " + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_buttonUbahActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here
       int row = tableBorrowers.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(sv, "Please select a record to delete.");
        } else {
            try (Connection connection = ConnectionMysql.getConnection()) {
                String borrowerId = textBorrowerId.getText().trim();
                String sql = "DELETE FROM borrowers WHERE id_borrower = ?";
                try (PreparedStatement preparedStatement = connection.prepareStatement(sql)) {
                    preparedStatement.setString(1, borrowerId);
                    int affectedRows = preparedStatement.executeUpdate();
                    if (affectedRows > 0) {
                        JOptionPane.showMessageDialog(null, "Data successfully deleted.", "Information", JOptionPane.INFORMATION_MESSAGE);
                        displayData();
                        reset();
                    } else {
                        JOptionPane.showMessageDialog(null, "Data not found or already deleted.", "Information", JOptionPane.WARNING_MESSAGE);
                    }
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Failed to delete data: " + e.getMessage(), "Information", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonSegarkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSegarkanActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_buttonSegarkanActionPerformed

    private void buttonTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTutupActionPerformed
        // TODO add your handling code here:
        try {
            dispose();
            HomeView.menuItemBook.setEnabled(true);
        } catch (Exception error) {
            System.out.println("Error at SiswaController-buttonTutupAction, details : " + error.toString());

        }
    }//GEN-LAST:event_buttonTutupActionPerformed

    private void textAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textAddressActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton buttonBatal;
    public static javax.swing.JButton buttonHapus;
    public static javax.swing.JButton buttonSegarkan;
    public static javax.swing.JButton buttonSimpan;
    public static javax.swing.JButton buttonTutup;
    public static javax.swing.JButton buttonUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    public static javax.swing.JTable tableBorrowers;
    private javax.swing.JTextField textAddress;
    public static javax.swing.JTextField textBorrowerId;
    private javax.swing.JTextField textContact;
    public static javax.swing.JTextField textName;
    public static javax.swing.JTextField textSearch;
    // End of variables declaration//GEN-END:variables

    private boolean validateData() {
       boolean b = true;
        try {
            if (textBorrowerId.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Borrower ID cannot be empty");
            } else if (textName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Name cannot be empty");
            } else if (textContact.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Writer cannot be empty");
            } else if (textAddress.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Publisher cannot be empty");
            }
            else {
                b = false;
            }
        } catch (Exception error) {
            System.out.println("Error in validasiData, details: " + error.toString());
            JOptionPane.showMessageDialog(sv, "Error in validasiData, details: " + error.toString());
        }
        return b;

    }

    private void reset() {
        textBorrowerId.setText("");
        textName.setText("");
        textContact.setText("");
        textAddress.setText("");
    }

    private void displayData() {
        Object[] baris = {"Borrower ID", "Name", "Contact", "Address"};
                tabmode = new DefaultTableModel(null, baris);
                tableBorrowers.setModel(tabmode);

                String sql = "SELECT * from borrowers";

                try {
                    Connection konek = new ConnectionMysql().getConnection();
                    Statement stat = konek.createStatement();
                    ResultSet res = stat.executeQuery(sql);

                    while (res.next()) {
                        String id_borrower = res.getString("id_borrower");
                        String name = res.getString("name");
                        String contact = res.getString("contact");
                        String address = res.getString("address");
                        String[] data = {id_borrower, name, contact, address};
                        tabmode.addRow(data);
                    }
                    
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Failed To Display", "INFORMASI", JOptionPane.INFORMATION_MESSAGE);
                }
    }

    private void searchData() {
    String keyword = textSearch.getText();
    // SQL untuk mencari borrower berdasarkan id_borrower, name, contact, atau address
    String sql = "SELECT borrowers.id_borrower, borrowers.name, borrowers.contact, borrowers.address "
               + "FROM borrowers "
               + "WHERE borrowers.id_borrower LIKE ? OR borrowers.name LIKE ? OR borrowers.contact LIKE ? OR borrowers.address LIKE ?";

    try (Connection konek = ConnectionMysql.getConnection()) {
        PreparedStatement pst = konek.prepareStatement(sql);
        String likeKeyword = "%" + keyword + "%";
        pst.setString(1, likeKeyword);  // Untuk pencarian pada id_borrower
        pst.setString(2, likeKeyword);  // Untuk pencarian pada name
        pst.setString(3, likeKeyword);  // Untuk pencarian pada contact
        pst.setString(4, likeKeyword);  // Untuk pencarian pada address

        ResultSet res = pst.executeQuery();
        tabmode.setRowCount(0); // Clear the existing rows

        while (res.next()) {
            String idBorrower = res.getString("id_borrower");
            String name = res.getString("name");
            String contact = res.getString("contact");
            String address = res.getString("address");
            String[] data = {idBorrower, name, contact, address};
            tabmode.addRow(data);
        }
    } catch (Exception e) {
        JOptionPane.showMessageDialog(null, "Gagal mencari data: " + e.getMessage(), "Informasi", JOptionPane.ERROR_MESSAGE);
    }
    }
}
