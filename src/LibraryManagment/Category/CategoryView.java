/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package LibraryManagment.Category;


import LibraryManagment.home.HomeView;
import LibraryManagment.utilities.ConnectionMysql;
import java.awt.Component;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class CategoryView extends javax.swing.JInternalFrame {
    private Component sv;
    DefaultTableModel tabmode;
    /**
     * Creates new form CategoryView
     */
    public CategoryView() throws SQLException {
       
        initComponents();
        tampildata();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonSegarkan = new javax.swing.JButton();
        buttonTutup = new javax.swing.JButton();
        buttonSimpan = new javax.swing.JButton();
        buttonBatal = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableJurusan = new javax.swing.JTable();
        textCodeCategory = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        textNameCategory = new javax.swing.JTextField();
        buttonUbah = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();

        buttonSegarkan.setText("Referesh");
        buttonSegarkan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSegarkanActionPerformed(evt);
            }
        });

        buttonTutup.setText("Close");
        buttonTutup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTutupActionPerformed(evt);
            }
        });

        buttonSimpan.setText("Save");
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonBatal.setText("Cancel");
        buttonBatal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBatalActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Category");

        jLabel2.setText("Code Category : ");

        tableJurusan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tableJurusan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableJurusanMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableJurusan);

        textCodeCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textCodeCategoryActionPerformed(evt);
            }
        });

        jLabel3.setText("Name Category : ");

        textNameCategory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textNameCategoryActionPerformed(evt);
            }
        });

        buttonUbah.setText("Change");
        buttonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUbahActionPerformed(evt);
            }
        });

        buttonHapus.setText("Delete");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel2)
                                        .addComponent(jLabel3))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(textNameCategory)
                                        .addComponent(textCodeCategory)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(buttonUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonHapus, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonSegarkan, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(buttonTutup, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(11, 11, 11)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(buttonSimpan)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(buttonBatal, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 516, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(200, 200, 200)
                        .addComponent(jLabel1)))
                .addContainerGap(31, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textCodeCategory, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(textNameCategory, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSimpan)
                    .addComponent(buttonBatal))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUbah)
                    .addComponent(buttonHapus)
                    .addComponent(buttonSegarkan)
                    .addComponent(buttonTutup))
                .addContainerGap(27, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSegarkanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSegarkanActionPerformed
        // TODO add your handling code here:
        reset();
    }//GEN-LAST:event_buttonSegarkanActionPerformed

    private void buttonTutupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTutupActionPerformed

        try {
            dispose();
            HomeView.menuItemBook.setEnabled(true);
        } catch (Exception error) {
            System.out.println("Error at SiswaController-buttonTutupAction, details : " + error.toString());

        }
    }//GEN-LAST:event_buttonTutupActionPerformed

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed

        try {
            boolean b = validationData();
            if (b == false) {
                Connection konek = ConnectionMysql.getConnection();
                String sql = "INSERT INTO category (category_id, name_category) VALUES (?, ?)";
                PreparedStatement pst = konek.prepareStatement(sql);

                // Setel nilai parameter
                pst.setString(1, textCodeCategory.getText());
                pst.setString(2, textNameCategory.getText());

                // Jalankan pernyataan SQL untuk menyimpan data Jurusan
                int isSuccess = pst.executeUpdate();

                if (isSuccess == 1) {
                    // Tampilkan data dan reset jika berhasil
                    tampildata();
                    reset();
                    JOptionPane.showMessageDialog(null, "Data Successfuly Saved", "Message", JOptionPane.INFORMATION_MESSAGE);
                } else {
                    JOptionPane.showMessageDialog(null, "Failed to Save Data", "Message", JOptionPane.ERROR_MESSAGE);
                }

            }

        } catch (SQLException | HeadlessException error) {
            System.out.println("Error at SiswaController-buttonSimpanAction, details: " + error.toString());
            JOptionPane.showMessageDialog(null, "Something Wrong: " + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_buttonSimpanActionPerformed

    private void buttonBatalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBatalActionPerformed

        // TODO add your handling code here:
        try {
            reset();
        } catch (Exception error) {
            System.out.println("Error at SiswaController-buttonBatalAction, details : " + error.toString());

        }
    }//GEN-LAST:event_buttonBatalActionPerformed

    private void tableJurusanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableJurusanMouseClicked
        // TODO add your handling code here:
        int table_jurusan = tableJurusan.getSelectedRow();
        textCodeCategory.setText(tableJurusan.getValueAt(table_jurusan,0).toString());
        textNameCategory.setText(tableJurusan.getValueAt(table_jurusan,1).toString());

    }//GEN-LAST:event_tableJurusanMouseClicked

    private void textCodeCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textCodeCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textCodeCategoryActionPerformed

    private void textNameCategoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textNameCategoryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_textNameCategoryActionPerformed

    private void buttonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUbahActionPerformed
        int row = tableJurusan.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Silahkan klik data yang ingin diubah");
        } else {
            try (Connection konek = ConnectionMysql.getConnection()) {
                String sql = "UPDATE category SET name_category = ? WHERE category_id = ?";
                try (PreparedStatement pst = konek.prepareStatement(sql)) {
                    // Set the parameter values
                    pst.setString(1, textNameCategory.getText());
                    pst.setString(2, tableJurusan.getValueAt(row, 0).toString()); // WHERE kd_jurusan = ?

                    // Execute the SQL statement to update the data
                    int isSuccess = pst.executeUpdate();

                    if (isSuccess == 1) {
                        // Display data and reset if successful
                        tampildata();
                        reset();
                        JOptionPane.showMessageDialog(null, "Data Successfully Saved", "Message", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Failed to Save Data", "Message", JOptionPane.ERROR_MESSAGE);
                    }
                }
            } catch (SQLException | HeadlessException error) {
                System.out.println("Error at SiswaController-buttonSimpanAction, details: " + error.toString());
                JOptionPane.showMessageDialog(null, "Something Wrong: " + error.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            }
        }

    }//GEN-LAST:event_buttonUbahActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        // TODO add your handling code here:
        int row = tableJurusan.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(sv, "Please click on the data you want to delete");
        } else {
            String category_id = "";
            category_id = textCodeCategory.getText();

            try {
                Connection konek = ConnectionMysql.getConnection();
                String sql = "DELETE from category where category_id ='"+category_id+"'";
                PreparedStatement pst = konek.prepareStatement(sql);
                pst.executeUpdate();
                JOptionPane.showMessageDialog(null, "Data Successfully Deleted", "Information", JOptionPane.INFORMATION_MESSAGE);
                tampildata();
                reset();
                konek.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Failed to Delete Data", "Information", JOptionPane.INFORMATION_MESSAGE);
            }
        }

    }//GEN-LAST:event_buttonHapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JButton buttonBatal;
    public static javax.swing.JButton buttonHapus;
    public static javax.swing.JButton buttonSegarkan;
    public static javax.swing.JButton buttonSimpan;
    public static javax.swing.JButton buttonTutup;
    public static javax.swing.JButton buttonUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableJurusan;
    public static javax.swing.JTextField textCodeCategory;
    public static javax.swing.JTextField textNameCategory;
    // End of variables declaration//GEN-END:variables

    private void reset() {
        textCodeCategory.setText("");
        textNameCategory.setText("");
    }

    private boolean validationData() 
    {
       boolean b = true;
         try {
             if (textCodeCategory.getText().equals("")) {
                 JOptionPane.showMessageDialog(null, "Category Code Cannot Be Empty");
             } else if (textNameCategory.getText().equals("")){
                 JOptionPane.showMessageDialog(null, "Category Cannot Be Empty");
             }else {
                 b = false;
             }
         } catch (Exception error) {
             System.out.println("Error at validasiData, details : " + error.toString());
             JOptionPane.showMessageDialog(sv, "Error at validasiData, details : " + error.toString());
         }
         return b;
    }

    private void tampildata() {
       Object[]baris = {"Code Category", "Category"};
        tabmode = new DefaultTableModel(null,baris);
        tableJurusan.setModel(tabmode);
        
        String sql = "Select * from Category";
        try {
            Connection connection = new ConnectionMysql ().getConnection();
            Statement stat = connection.createStatement();
            ResultSet res = stat.executeQuery(sql);
            while (res.next()){
                String category_id = res.getString("category_id");
                String name_category = res.getString("name_category");
                String[]data = {category_id,name_category};
                tabmode.addRow(data);
            }connection.close();
        }catch (Exception e) {
            JOptionPane.showMessageDialog
        (null, "Failed to Display", "Information", JOptionPane.INFORMATION_MESSAGE);
        }
    }
}
